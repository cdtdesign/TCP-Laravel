<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>passportdb</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>1793026532196030071</string>
			<key>name</key>
			<string>Local</string>
			<key>port</key>
			<integer>8889</integer>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentFilter</key>
			<dict/>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGOjtYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK8QDwcIFRYXGBkfICEoLDA0OFUkbnVs
			bNMJCgsMEBRXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6MNDg+A
			AoADgASjERITgAWABoAKgA5UdHlwZVRyb3dzVGtleXNfECZTZWxl
			Y3Rpb25EZXRhaWxUeXBlUHJpbWFyeUtleWVkRGV0YWlsc9MJCgsa
			HB6hG4AHoR2ACIAJUTIJ0iIjJCVaJGNsYXNzbmFtZVgkY2xhc3Nl
			c18QE05TTXV0YWJsZURpY3Rpb25hcnmjJCYnXE5TRGljdGlvbmFy
			eVhOU09iamVjdNIKCykroSqAC4AN0gstLi9ZTlMuc3RyaW5ngAxS
			aWTSIiMxMl8QD05TTXV0YWJsZVN0cmluZ6MxMydYTlNTdHJpbmfS
			IiM1Nl5OU011dGFibGVBcnJheaM1NydXTlNBcnJhedIiIyY5oiYn
			XxAPTlNLZXllZEFyY2hpdmVy0Tw9VGRhdGGAAQAIABEAGgAjAC0A
			MgA3AEkATwBWAF4AaQBwAHQAdgB4AHoAfgCAAIIAhACGAIsAkACV
			AL4AxQDHAMkAywDNAM8A0QDSANcA4gDrAQEBBQESARsBIAEiASQB
			JgErATUBNwE6AT8BUQFVAV4BYwFyAXYBfgGDAYYBmAGbAaAAAAAA
			AAACAQAAAAAAAAA+AAAAAAAAAAAAAAAAAAABog==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {1298.5, 723}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>table</key>
			<string>travelers</string>
			<key>view</key>
			<string>SP_VIEW_CONTENT</string>
			<key>windowVerticalDividerPosition</key>
			<real>140</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>UPDATE contacts SET fname='Patrick', lname='Rogers', phone='534453', email='pat@cdtdesign.com', url='https://www.facebook.com/patrick.rogers.7946' WHERE id='12'</string>
		<string>select n as age,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 1
and numbers.n &lt;= 100</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 1
and numbers.n &lt;= 100</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price 
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>where age = n
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
an</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price
	where age = n
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	(SELECT
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price
	where age = n
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	(SELECT
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price
) as dvdCount on dvdCount.age = numbers.n
from numbers
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>numbers</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from dvd
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price
) as dvdCount on dvdCount.age = numbers.n
from numbers
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by Price + 2
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCount is not null then dvdCount
	else 0
	end as dvdCount
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCount
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age asc
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCountPrice is not null then dvdCountPrice
	else 0
	end as dvdCountPrice
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCountPrice
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age asc
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price,
	case 
	when dvdCountPrice is not null then dvdCountPrice
	else 0
	end as dvdCountPrice
from numbers
left join (
	select age, count(dvd.dvdId) as dvdCountPrice
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age asc
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select Price, n as age, 
	case 
	when dvdCountPrice is not null then dvdCountPrice
	else 0
	end as dvdCountPrice
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCountPrice
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age asc
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, 
	case 
	when dvdCountPrice is not null then dvdCountPrice
	else 0
	end as dvdCountPrice
from numbers
left join (
	select age, Price, count(dvd.dvdId) as dvdCountPrice
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age asc
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
		<string>select n as age, Price
	case 
	when dvdCountPrice is not null then dvdCountPrice
	else 0
	end as dvdCountPrice
from numbers
left join (
	select age, count(dvd.dvdId) as dvdCountPrice
	from dvd
	join userDvd on userDvd.dvdId = dvd.dvdId
	join users on users.userId = userDvd.userId
	group by age asc
) as dvdCount on dvdCount.age = numbers.n
where numbers.n &gt;= 18
and numbers.n &lt;= 65</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.5.42</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
